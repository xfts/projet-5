Notes:


script.js_Notes::
________________________________


/*
    for (i = 0 ; i < 9 ; i++){
	console.log("voici les noms de cannape :" + produits.name);
    //plus besoin, 'forEachin' fait l'affaire en mieux !!! 
    }


/////////voir tableau api
fetch("http://127.0.0.1:3000/api/products")
    .then(data => data.json())
    .then(dataFinal => produits = dataFinal)
    .then(() => console.table(produits))
/////////voir tableau api


*/


/* Fetch is asynchronous. You can’t assign data recieved in async outside of asynchronous scope. So you need to perform all actions you need inside of .then()*/

________________________________





produit.js_Notes::
________________________________

//tmp/
//////////////////////////////////////////////////////////////////
//fct pour voir les donnees de produit de l'api a travers la console
/*function apiTab(){
const url =  new URLSearchParams(window.location.search);
let idProduit = url.get('id');
//console.log(`id egale a :${idProduit}`);

fetch(`http://127.0.0.1:3000/api/products/${idProduit}`)
    .then(data => data.json())
    .then((dataFinal) => console.table(dataFinal));
}
apiTab();
*/
//////////////////////////////////////////////////////////////////




/*Utiles :
//window.localStorage.clear();

//voir les donnee ds le localStorage
for(let i in localStorage ){
    console.log([i]);//permet d'avoir tous les elements de l'objet
    console.log(localStorage[i]);//permet d'avoir le contenue et le nom des objects 
}
*/
/*
for (let i = 0; i < localStorage.length; i++) {
    const key = localStorage.key(i);
    console.log(`${key}: ${localStorage.getItem(key)}`);
}

//plus rapide:
for (let i =0 ; i < localStorage.length; i++){
    console.log(localStorage.key(i);
    //console.log(i); // pour avoir les numero du array de l'objet du localStorage 
}


//voir les donnee ds le localStorage


//comment avoir le nom de la couleur 
var selectElem = document.getElementById('colors')
// When a new <option> is selected
selectElem.addEventListener('change', function() {
    console.log(selectElem.value);
       })
//comment avoir le nom de la couleur 
 

*/

/*
function leme(){
	
	//get all key name 
    for( let t = 0; t < localStorage.length; t++){
	console.log(localStorage.key(t));
    }
    
	//get all object of localStorage
    for (let e in localStorage){
	console.log(JSON.parse(localStorage.getItem(e)));
	//console.log(e);
    } 
	//LeMe
    
    for (let e = 0 ; e < localStorage.length; e++){
	console.log(JSON.parse(localStorage.getItem(localStorage.key(e))));
    }  //LeMe
}
leme();

//How can i display a js object !!
    str = JSON.stringify(tabl);
    str = JSON.stringify(tabl, null, 4); // (Optional) beautiful indented output.
    console.log(str);
//How can i display a js object !!


//internet(premet de sortir tous les infos ds le LocalStorage !!!
function dataStorage() {
    var values = [],
    keys = Object.keys(localStorage),
    i = keys.length;
	
    while ( i-- ) {
	values.push( localStorage.getItem(keys[i]) );
    }
    console.log(values);
}
dataStorage();
//internet(premet de sortir tous les infos ds le LocalStorage !!!

*/







/*tips:
recuperer l'id(la variable est bien accessible (porte de variabe 'ok')
recuperer la couleur (ok) 
recuperer la quantite (ok) //NE PAS ENREGISTER LE PRIX (A FAIRE A LA FIN)!!
faire la condition avant envoie (ok)
//faire une condition pour la validation du panier (ok)
//
//securite pr le dev back-end "never trust user input"
//{...}

//(mentor)
//!!!!verifiez la quantite total avant de passer a la caisse!!!!!!! 
//idee en plus, creee une variable objet et mettre tous var en bas a l'interieur !!

//fonctionne, mais pas ce qui est demande
let url2 =  window.location.search;
console.log(url2);

//pb avec href, comment sortir la variable de l'objet ?
let a =  new URLSearchParams(window.location.href);
console.log(a);


*/
________________________________





cart.js_Notes:
________________________________



//a regler plus tard (bonne chance a moi meme, crois moi, tu en auras bien besoin )
/*
	    //Validation de la commande ://
	/////////////////////////////////////////
		

	//creation de l'objet à envoyer au server
        
        const dataToSend = { contact,products };
            
        //creation de l'init pour le fetch
        
        const monInit = {
            method: 'POST',
            body: JSON.stringify(dataToSend),
            headers: {
            	'Content-Type': 'application/json'
            }
         };

        //creation de la requete pour le fetch
         
        let maRequete = new Request(`http://localhost:3000/api/products/order/`, monInit);

        //appel du fetch et envoie des data
        
        fetch(maRequete, monInit)
        	.then(response => response.json())
        	.then(data => {
         
         //vidange du local storage
         
         localStorage.clear(); 
         
         //recupération de l'id dans les données en réponse
         
         localStorage.setItem('orderId', data.orderId);
         
         //redirection
         document.location.href = 'confirmation.html?id=' + data.orderId;
      });

	    /////////////////////////////////////////
		//Validation de la commande ://

*/






//on a prefere ne pas garder le prix des articles ds le localStorage, 
//pr eviter sa manipulation, et c'est pour cela que l'utilisation des valeurs des prix depuis l'api semble etre la plus securise (leme)
//
//On ne fait qui lire les prix depuis la page html (document {objet js})pr faire le calcule du prix Total, mais les donnees envoye a l'api pr la commande general, va avoir le prix par article (depuis une api aussi).
//Seul le nb d'article et le prix total seront envoyer pour subir une verification* et un traitement  *(ds le cas ou l'utitilisateur ou autre a modife le prix total en question ) 
//
//Formulaire :
//on conseillerait les clients de passer par des api pour les adresses pour faciliter l'aquesition des donnees et d'avoir des resultats les plus juste possible 
//
//
//timeStamp(utiliser cette fct), avec fonction de hashage qui prend en valeur en micro seconde
//micro
//ex: var microtime = (Date.now() % 1000) / 1000;


/* ne fonctionne pas ds la boucle ??? bizarre
    let pQuantiteTxt = document.createTextNode(`Qte : ${tab[0].quantite} `);
*/


//tmp/
//////////////////////////////////////////////////////////////////
//fct pour voir les donnees de produit de l'api a travers la console
function apiTab(){
fetch("http://127.0.0.1:3000/api/products/")
    .then(data => data.json())
    .then((dataFinal) => console.table(dataFinal));
}
//////////////////////////////////////////////////////////////////





			//code a regler//
//////////////////////////////////////////////////////////////////
/*

//Fonctionne
//avoir le prix sur une variable depuis l'api (reussi!!!)
let idProduit = localStorage.key(0); let obj;
fetch(`http://127.0.0.1:3000/api/products/${idProduit}`)
  .then(res => res.json())
    .then(data => obj = data)

//Ne fonctionne pas, et c'est cette fonction qui doit marcher
function calc(quanLS,idProduit){
let obj = 0;
fetch(`http://127.0.0.1:3000/api/products/${idProduit}`)
    .then(res => res.json())
	.then(data => obj = data)
	    console.log(obj);//sa ne marche pas !!!
    //		prixTotal += quanLS * obj.price;
	  //	    return prixTotal;
Soluce :il faut mettre les parentheses sur .then(data => {...}
}
fonctionne !!
function calc(quanLS,idProduit){
let obj = 0;
    fetch(`http://127.0.0.1:3000/api/products/${idProduit}`)
    .then(res => res.json())
	.then(data => {
	    obj = data;
		console.log(obj.price);
    })		                                      
}
*/
/////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////
/*
let articleCart = document.querySelectorAll(".cart__item");//FUCK YOU JSfrom the buttom of my BALLS !!!!! (fonctionne sur les elements deja present la page html et non pas apres (no se pq)
console.log(articleCart);


const vbn = document.body;
console.log(vbn);
    const removeCartItemButtons = document.getElementsByClassName("deleteItem");
    console.log(removeCartItemButtons);//sa marche ici BORDELLLLL
    console.log(removeCartItemButtons.length);// PK ??????????????????????????????????????????????????? PUT11111111111111!!!!!!
/////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////
function calc(quanLS,idProduit){
    fetch(`http://127.0.0.1:3000/api/products/${idProduit}`)
	.then(data => data.json())
	.then((t) => {  
	    prixTotal += quanLS * t.price;
	    //fonctionne 	    
	    //return prixTotal; //ne fonctionne pas
    });
}
/////////////////////////////////////////////////////////


/////////////////////////////////////////////////////////
function effacerArticle(){
    const removeCartItemButtons = document.getElementsByClassName("deleteItem");
    console.log(removeCartItemButtons);//sa marche ici BORDELLLLL
    console.log(removeCartItemButtons.length);// PK ??????????????????????????????????????????????????? PUT11111111111111!!!!!!
    button.addEventListener('click', function(){
    console.log('click')
    })
//    for (var i = 0; i < removeCartItemButtons.length; i++){
	//var button = removeCartItemButtons[i];

    /*
    button.addEventListener('click', function(event){
    var buttonClicked = event.target
    buttonClicked.parentElement.parentElement.remove()
    })
}
*/
/////////////////////////////////////////////////////////
		//delete item Test//
/////////////////////////////////////////////////////////
	/*
	    pDelete.addEventListener('click', function(){
	    article.innerHTML = "";
	    //let a = this.closest('article');
	    //a.innerHTML = "";   
	    });*/
/////////////////////////////////////////////////////////

// a perfectionner (regler l'affichage du prix total)
function afficheArticlePrix(a){
	    //a regler plus tart (prixTotal) 
    let totalQuantiteArticle = document.getElementById("totalQuantity");
    totalQuantiteArticleTxt = document.createTextNode(`${a}`);
    totalQuantiteArticle.appendChild(totalQuantiteArticleTxt);
/*
    let totalPrixArticle = document.getElementById("totalPrice");
    prixTotal += r.price * quanLS;//fonctionne a merveille
    console.log(prixTotal);		
    totalPrixArticleTxt = document.createTextNode(`${prixTotal}`);
    //innerHTML pr remplacer par la dernier valeur (ecraser) 
    totalPrixArticle.appendChild(totalPrixArticleTxt);
*/
}
//////////////////////////////////////////////////////////////////






/*
// TRUCK EFFACER 
//  a garder jusqu'a la fin du projet
let idProduit = localStorage.key(0);
tab = JSON.parse(localStorage.getItem(`${idProduit}`));
console.log(tab[0].couleur);

let tableauTT = [];

//leme
    document.querySelector(".deleteItem").addEventListener('click', function(e){
	
	buttonClicked.parentElement.parentElement.parentElement.parentElement.remove()
    });
//leme
*/






________________________________



